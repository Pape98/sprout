{"v":"5.9.0","fr":30,"ip":0,"op":1800,"w":1920,"h":1080,"nm":"Main_Dog","ddd":0,"assets":[{"id":"image_0","w":196,"h":179,"u":"images/","p":"img_0.png","e":0},{"id":"image_1","w":196,"h":179,"u":"images/","p":"img_1.png","e":0},{"id":"image_2","w":225,"h":192,"u":"images/","p":"img_2.png","e":0},{"id":"image_3","w":46,"h":46,"u":"images/","p":"img_3.png","e":0},{"id":"image_4","w":144,"h":118,"u":"images/","p":"img_4.png","e":0},{"id":"image_5","w":419,"h":385,"u":"images/","p":"img_5.png","e":0},{"id":"image_6","w":218,"h":208,"u":"images/","p":"img_6.png","e":0},{"id":"image_7","w":594,"h":402,"u":"images/","p":"img_7.png","e":0},{"id":"image_8","w":196,"h":179,"u":"images/","p":"img_8.png","e":0},{"id":"image_9","w":196,"h":179,"u":"images/","p":"img_9.png","e":0},{"id":"comp_0","nm":"Dog_Fast","fr":30,"layers":[{"ddd":0,"ind":1,"ty":0,"nm":"Dog_1","refId":"comp_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[1920,1080,0],"ix":2,"l":2},"a":{"a":0,"k":[1920,1080,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"tm":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"t":900,"s":[60]}],"ix":2},"w":3840,"h":2160,"ip":0,"op":5400,"st":0,"bm":0}]},{"id":"comp_1","nm":"Dog_1","fr":30,"layers":[{"ddd":0,"ind":1,"ty":3,"nm":"b_l_leg-Wrist","parent":2,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar userRot = 0;\nvar valueRot = userRot ? value : 0;\nvar startctrl = thisComp.layer('b_l_leg-Shoulder');\nvar endctrl = thisLayer;\nvar curLayer = thisLayer;\nvar curRot = 0;\nwhile (curLayer.hasParent) {\n    curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curLayer = curLayer.parent;\n}\nvar rotend = $bm_div(endctrl.effect('Limber')('Rotate End'), 100);\nif (rotend == 0) {\n    $bm_rt = $bm_sum($bm_neg(curRot), valueRot);\n} else {\n    var p1 = startctrl.toWorld([\n        0,\n        0,\n        0\n    ]);\n    var p3ik = endctrl.toWorld([\n        0,\n        0,\n        0\n    ]);\n    var p3r = $bm_sub(p3ik, p1);\n    var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n    var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n    var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n    var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n    var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n    var cw = endctrl.effect('Limber')('Clockwise');\n    var cwLin = Math.abs($bm_div(cw, 100));\n    var antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\n    var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n    var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n    var totLeng = $bm_sum(s3ik, s1ik);\n    var s2 = length(p1, p3ik);\n    var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n    var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, antipop), 1));\n    var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n    var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n    var s3blend = $bm_sum($bm_mul(s3ap, cwLin), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwLin)));\n    var s1blend = $bm_sum($bm_mul(s1ap, cwLin), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwLin)));\n    try {\n        var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(theta1, Math.PI);\n        var a2ik = $bm_sum($bm_sum(theta1, theta2), Math.PI);\n    } catch (err) {\n        value;\n    }\n    var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n    if (curveLin == 0) {\n        $bm_rt = $bm_sum($bm_sum($bm_mul(rotend, $bm_sub($bm_sub(radiansToDegrees(a2ik), 180), curRot)), $bm_mul($bm_sub(1, rotend), $bm_neg(curRot))), valueRot);\n    } else {\n        var p2ik = $bm_sum(p1, [\n            Math.sin(a1ik) * s3blend,\n            -Math.cos(a1ik) * s3blend\n        ]);\n        var p3ik = $bm_sum(p2ik, [\n            Math.sin(a2ik) * s1blend,\n            -Math.cos(a2ik) * s1blend\n        ]);\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var linkScale = endctrl.effect('Limber')('Link Length to Size Scale');\n        var tangLeng = $bm_mul($bm_div($bm_mul(curveLin, $bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length'))), 2), linkScale == true ? sizeScale : 1);\n        var avang = $bm_div($bm_sub($bm_sum(a1ik, a2ik), Math.PI), 2);\n        var tangPos = $bm_sum(p2ik, [\n            Math.cos(avang) * tangLeng,\n            Math.sin(avang) * tangLeng\n        ]);\n        var tangPosRel = $bm_sub(tangPos, p3ik);\n        var a1curve = $bm_sum(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n        $bm_rt = $bm_sum($bm_sum($bm_sub($bm_mul(rotend, a1curve), curRot), $bm_mul($bm_sub(1, rotend), $bm_neg(curRot))), valueRot);\n    }\n}"},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":30,"s":[85,135,0],"to":[-12.167,-5.333,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[12,103,0],"to":[-28.333,0,0],"ti":[-12.167,-5.333,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":90,"s":[-85,135,0],"to":[12.167,5.333,0],"ti":[-28.333,0,0]},{"t":150,"s":[85,135,0]}],"ix":2,"l":2,"x":"var $bm_rt;\n$bm_rt = loopOut('cycle');"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"Limber","np":36,"mn":"Pseudo/Limber_16","ix":1,"en":1,"ef":[{"ty":6,"nm":"Shape","mn":"Pseudo/Limber_16-0001","ix":1,"v":0},{"ty":0,"nm":"Upper Length","mn":"Pseudo/Limber_16-0002","ix":2,"v":{"a":0,"k":80,"ix":2}},{"ty":0,"nm":"Lower Length","mn":"Pseudo/Limber_16-0003","ix":3,"v":{"a":0,"k":80,"ix":3}},{"ty":0,"nm":"Start Size","mn":"Pseudo/Limber_16-0004","ix":4,"v":{"a":0,"k":80,"ix":4}},{"ty":0,"nm":"Middle Size","mn":"Pseudo/Limber_16-0005","ix":5,"v":{"a":0,"k":60,"ix":5}},{"ty":0,"nm":"End Size","mn":"Pseudo/Limber_16-0006","ix":6,"v":{"a":0,"k":40,"ix":6}},{"ty":0,"nm":"Bone Curvature","mn":"Pseudo/Limber_16-0007","ix":7,"v":{"a":0,"k":0,"ix":7}},{"ty":7,"nm":"Square End","mn":"Pseudo/Limber_16-0008","ix":8,"v":{"a":0,"k":0,"ix":8}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0009","ix":9,"v":0},{"ty":6,"nm":"Scale","mn":"Pseudo/Limber_16-0010","ix":10,"v":0},{"ty":0,"nm":"Size Scale","mn":"Pseudo/Limber_16-0011","ix":11,"v":{"a":0,"k":100,"ix":11}},{"ty":7,"nm":"Link Length to Size Scale","mn":"Pseudo/Limber_16-0012","ix":12,"v":{"a":0,"k":1,"ix":12}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0013","ix":13,"v":0},{"ty":6,"nm":"Colors","mn":"Pseudo/Limber_16-0014","ix":14,"v":0},{"ty":0,"nm":"Upper Split","mn":"Pseudo/Limber_16-0015","ix":15,"v":{"a":0,"k":100,"ix":15}},{"ty":0,"nm":"Upper Rounding","mn":"Pseudo/Limber_16-0016","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":0,"nm":"Lower Split","mn":"Pseudo/Limber_16-0017","ix":17,"v":{"a":0,"k":70,"ix":17}},{"ty":0,"nm":"Lower Rounding","mn":"Pseudo/Limber_16-0018","ix":18,"v":{"a":0,"k":0,"ix":18}},{"ty":2,"nm":"Upper Color","mn":"Pseudo/Limber_16-0019","ix":19,"v":{"a":0,"k":[1,0.843137323856,0.364705890417,1],"ix":19}},{"ty":2,"nm":"Middle Color","mn":"Pseudo/Limber_16-0020","ix":20,"v":{"a":0,"k":[1,0.843137323856,0.364705890417,1],"ix":20}},{"ty":2,"nm":"Lower Color","mn":"Pseudo/Limber_16-0021","ix":21,"v":{"a":0,"k":[1,0.843137323856,0.364705890417,1],"ix":21}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0022","ix":22,"v":0},{"ty":6,"nm":"Dynamics","mn":"Pseudo/Limber_16-0023","ix":23,"v":0},{"ty":0,"nm":"Clockwise","mn":"Pseudo/Limber_16-0024","ix":24,"v":{"a":0,"k":100,"ix":24}},{"ty":0,"nm":"Rotate Start","mn":"Pseudo/Limber_16-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":0,"nm":"Rotate End","mn":"Pseudo/Limber_16-0026","ix":26,"v":{"a":0,"k":0,"ix":26}},{"ty":7,"nm":"Stretch","mn":"Pseudo/Limber_16-0027","ix":27,"v":{"a":0,"k":1,"ix":27}},{"ty":0,"nm":"Anti-pop","mn":"Pseudo/Limber_16-0028","ix":28,"v":{"a":0,"k":0,"ix":28}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0029","ix":29,"v":0},{"ty":6,"nm":"Forward Kinematics","mn":"Pseudo/Limber_16-0030","ix":30,"v":0},{"ty":0,"nm":"FK","mn":"Pseudo/Limber_16-0031","ix":31,"v":{"a":0,"k":0,"ix":31}},{"ty":0,"nm":"Upper FK Rotation","mn":"Pseudo/Limber_16-0032","ix":32,"v":{"a":0,"k":180,"ix":32}},{"ty":0,"nm":"Lower FK Rotation","mn":"Pseudo/Limber_16-0033","ix":33,"v":{"a":0,"k":0,"ix":33}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0034","ix":34,"v":0}]}],"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":3,"nm":"b_l_leg-Shoulder","parent":19,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar userRot = 0;\nvar valueRot = userRot ? value : 0;\nvar endctrl = thisComp.layer('b_l_leg-Wrist');\nvar startctrl = thisComp.layer('b_l_leg-Shoulder');\nvar rotstart = $bm_div(endctrl.effect('Limber')('Rotate Start'), 100);\nvar curlayer = startctrl;\nvar curRot = 0;\nwhile (curlayer.hasParent) {\n    curRot = $bm_sum(curRot, curlayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curlayer = curlayer.parent;\n}\nif (rotstart == 0) {\n    $bm_rt = $bm_sum($bm_neg(curRot), valueRot);\n} else {\n    var fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\n    if (fk == 1) {\n        var startctrl = thisComp.layer('b_l_leg-Shoulder');\n        var p1 = startctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n        var a1fk = degreesToRadians(endctrl.effect('Limber')('Upper FK Rotation'));\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sum($bm_sub($bm_mul(rotstart, $bm_sub(radiansToDegrees(a1fk), 180)), curRot), $bm_mul($bm_neg(rotstart), $bm_neg(curRot))), valueRot);\n        } else {\n            var a2fk = degreesToRadians(endctrl.effect('Limber')('Lower FK Rotation'));\n            var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n            var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n            var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n            var s3fk = Math.max(endctrl.effect('Limber')('Upper Length'), Math.abs($bm_sub(c1, c2)));\n            var s1fk = Math.max(endctrl.effect('Limber')('Lower Length'), Math.abs($bm_sub(c2, c3)));\n            var p2fk = $bm_sum(p1, [\n                Math.sin(a1fk) * s3fk,\n                -Math.cos(a1fk) * s3fk\n            ]);\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1fk, a1fk), a2fk), Math.PI), 2);\n            var tangLeng = $bm_div($bm_mul(curveLin, $bm_sum(s3fk, s1fk)), 2);\n            var tangPos = $bm_sub(p2fk, [\n                Math.cos(avang) * tangLeng,\n                Math.sin(avang) * tangLeng\n            ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var a1fkcurve = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sum($bm_sub($bm_mul(rotstart, a1fkcurve), curRot), $bm_mul($bm_neg(rotstart), $bm_neg(curRot))), valueRot);\n        }\n    } else if (fk == 0) {\n        var p1 = startctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n        var p3ik = endctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n        var p3r = $bm_sub(p3ik, p1);\n        var s2 = length(p1, p3ik);\n        var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n        var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n        var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n        var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var cw = endctrl.effect('Limber')('Clockwise');\n        var cwLin = Math.abs($bm_div(cw, 100));\n        var antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\n        var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n        var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n        var totLeng = $bm_sum(s3ik, s1ik);\n        var s2 = length(p1, p3ik);\n        var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n        var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, antipop), 1));\n        var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n        var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n        var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n        var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        try {\n            var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n            var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n            var a1ik = $bm_sum(theta1, Math.PI);\n            var a2ik = theta2;\n        } catch (err) {\n            value;\n        }\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub($bm_sub(radiansToDegrees(a1ik), 180), curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        } else {\n            var p2ik = $bm_sum(p1, [\n                Math.sin(a1ik) * s3blend,\n                -Math.cos(a1ik) * s3blend\n            ]);\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1ik, a1ik), a2ik), Math.PI), 2);\n            var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n            var linkScale = endctrl.effect('Limber')('Link Length to Size Scale');\n            var tangLeng = $bm_mul($bm_div($bm_mul(curveLin, $bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length'))), 2), linkScale == true ? sizeScale : 1);\n            var tangPos = $bm_sub(p2ik, [\n                Math.cos(avang) * tangLeng,\n                Math.sin(avang) * tangLeng\n            ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var curveRotik = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub(curveRotik, curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        }\n    } else {\n        var p1 = startctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n        var p3ik = endctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n        var p3r = $bm_sub(p3ik, p1);\n        var s2 = length(p1, p3ik);\n        var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n        var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n        var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n        var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var cw = endctrl.effect('Limber')('Clockwise');\n        var cwLin = Math.abs($bm_div(cw, 100));\n        var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n        var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n        var totLeng = $bm_sum(s3ik, s1ik);\n        var s2 = length(p1, p3ik);\n        var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n        var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, $bm_div(endctrl.effect('Limber')('Anti-pop'), 100)), 1));\n        var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n        var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n        var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n        var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        try {\n            var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n            var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n            var a1ik = $bm_sum(theta1, Math.PI);\n            var a2ik = theta2;\n        } catch (err) {\n            value;\n        }\n        var a1fk = degreesToRadians($bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation')));\n        var a2fk = degreesToRadians(endctrl.effect('Limber')('Lower FK Rotation'));\n        var a1blend = $bm_sum($bm_mul(a1ik, $bm_sub(1, fk)), $bm_mul(a1fk, fk));\n        var a2blend = $bm_sum($bm_mul(a2ik, $bm_sub(1, fk)), $bm_mul(a2fk, fk));\n        var p2blend = $bm_sum(p1, [\n            Math.sin(a1blend) * s3blend,\n            -Math.cos(a1blend) * s3blend\n        ]);\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub($bm_sub(radiansToDegrees(a1blend), 180), curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        } else {\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1blend, a1blend), a2blend), Math.PI), 2);\n            var tangLeng = $bm_div($bm_mul(curveLin, totLeng), 2);\n            var tangPos = $bm_sub(p2blend, [\n                Math.cos(avang) * tangLeng,\n                Math.sin(avang) * tangLeng\n            ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var curveRotblend = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub(curveRotblend, curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        }\n    }\n}"},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":30,"s":[432.519,245.424,0],"to":[0,-3.337,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[432.519,225.4,0],"to":[0,0,0],"ti":[0,-3.337,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":90,"s":[432.519,245.424,0],"to":[0,0,0],"ti":[0,0,0]},{"t":150,"s":[432.519,245.424,0]}],"ix":2,"l":2,"x":"var $bm_rt;\n$bm_rt = loopOut('cycle');"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"b_l_leg-Arm","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar curlayer = thisLayer;\nvar rot = 0;\nwhile (curlayer.hasParent) {\n    rot = $bm_sum(rot, curlayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curlayer = curlayer.parent;\n}\n$bm_rt = $bm_neg(rot);"},"p":{"a":0,"k":[0,0,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar val = [\n    0,\n    0\n];\nif (thisLayer.hasParent)\n    val = parent.fromWorld([\n        0,\n        0,\n        0\n    ]);\n$bm_rt = [\n    val[0],\n    val[1],\n    0\n];"},"a":{"a":0,"k":[0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.5522847498307933;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('b_l_leg-Wrist');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n    rad2 * Math.sin(A),\n    -(dist - rad2 * Math.cos(A))\n];\nvar r3b = [\n    rad1 * Math.sin(A),\n    rad1 * Math.cos(A)\n];\nvar semiVerts = [\n    [\n        rad1,\n        0\n    ],\n    [\n        0,\n        rad1\n    ],\n    [\n        -rad1,\n        0\n    ]\n];\nvar semiIns = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        0\n    ],\n    [\n        $bm_mul(rad1, semiFac),\n        0\n    ],\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ]\n]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ],\n    [\n        $bm_mul($bm_neg(rad1), semiFac),\n        0\n    ],\n    [\n        0,\n        0\n    ]\n]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n            [\n                rad2,\n                -dist\n            ],\n            [\n                0,\n                -(dist - rad2)\n            ],\n            [\n                -rad2,\n                -dist\n            ]\n        ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                0\n            ],\n            [\n                $bm_mul(rad2, semiFac),\n                0\n            ],\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ]\n        ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ],\n            [\n                $bm_mul($bm_neg(rad2), semiFac),\n                0\n            ],\n            [\n                0,\n                0\n            ]\n        ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('b_l_leg-Wrist').effect('Limber')('Middle Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Distal Upper","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.5522847498307933;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('b_l_leg-Wrist');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n    rad2 * Math.sin(A),\n    -(dist - rad2 * Math.cos(A))\n];\nvar r3b = [\n    rad1 * Math.sin(A),\n    rad1 * Math.cos(A)\n];\nvar semiVerts = [\n    [\n        rad1,\n        0\n    ],\n    [\n        0,\n        rad1\n    ],\n    [\n        -rad1,\n        0\n    ]\n];\nvar semiIns = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        0\n    ],\n    [\n        $bm_mul(rad1, semiFac),\n        0\n    ],\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ]\n]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ],\n    [\n        $bm_mul($bm_neg(rad1), semiFac),\n        0\n    ],\n    [\n        0,\n        0\n    ]\n]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n            [\n                rad2,\n                -dist\n            ],\n            [\n                0,\n                -(dist - rad2)\n            ],\n            [\n                -rad2,\n                -dist\n            ]\n        ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                0\n            ],\n            [\n                $bm_mul(rad2, semiFac),\n                0\n            ],\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ]\n        ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ],\n            [\n                $bm_mul($bm_neg(rad2), semiFac),\n                0\n            ],\n            [\n                0,\n                0\n            ]\n        ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('b_l_leg-Wrist').effect('Limber')('Upper Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Proximal Upper","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('b_l_leg-Wrist').content('Admin').content('p1').transform.position;"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('b_l_leg-Wrist').content('Admin').content('angles').transform.anchorPoint[0];"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Upper Group","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.5522847498307933;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('b_l_leg-Wrist');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n    rad2 * Math.sin(A),\n    -(dist - rad2 * Math.cos(A))\n];\nvar r3b = [\n    rad1 * Math.sin(A),\n    rad1 * Math.cos(A)\n];\nvar semiVerts = [\n    [\n        rad1,\n        0\n    ],\n    [\n        0,\n        rad1\n    ],\n    [\n        -rad1,\n        0\n    ]\n];\nvar semiIns = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        0\n    ],\n    [\n        $bm_mul(rad1, semiFac),\n        0\n    ],\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ]\n]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ],\n    [\n        $bm_mul($bm_neg(rad1), semiFac),\n        0\n    ],\n    [\n        0,\n        0\n    ]\n]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n            [\n                rad2,\n                -dist\n            ],\n            [\n                0,\n                -(dist - rad2)\n            ],\n            [\n                -rad2,\n                -dist\n            ]\n        ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                0\n            ],\n            [\n                $bm_mul(rad2, semiFac),\n                0\n            ],\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ]\n        ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ],\n            [\n                $bm_mul($bm_neg(rad2), semiFac),\n                0\n            ],\n            [\n                0,\n                0\n            ]\n        ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('b_l_leg-Wrist').effect('Limber')('Middle Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Proximal Lower","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.5522847498307933;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('b_l_leg-Wrist');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n    rad2 * Math.sin(A),\n    -(dist - rad2 * Math.cos(A))\n];\nvar r3b = [\n    rad1 * Math.sin(A),\n    rad1 * Math.cos(A)\n];\nvar semiVerts = [\n    [\n        rad1,\n        0\n    ],\n    [\n        0,\n        rad1\n    ],\n    [\n        -rad1,\n        0\n    ]\n];\nvar semiIns = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        0\n    ],\n    [\n        $bm_mul(rad1, semiFac),\n        0\n    ],\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ]\n]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ],\n    [\n        $bm_mul($bm_neg(rad1), semiFac),\n        0\n    ],\n    [\n        0,\n        0\n    ]\n]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n            [\n                rad2,\n                -dist\n            ],\n            [\n                0,\n                -(dist - rad2)\n            ],\n            [\n                -rad2,\n                -dist\n            ]\n        ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                0\n            ],\n            [\n                $bm_mul(rad2, semiFac),\n                0\n            ],\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ]\n        ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ],\n            [\n                $bm_mul($bm_neg(rad2), semiFac),\n                0\n            ],\n            [\n                0,\n                0\n            ]\n        ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('b_l_leg-Wrist').effect('Limber')('Lower Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Distal Lower","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('b_l_leg-Wrist').content('Admin').content('p2blend').transform.position;"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('b_l_leg-Wrist').content('Admin').content('angles').transform.anchorPoint[1];"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Lower Group","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Limb","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":2,"nm":"b_l_footfoot","parent":1,"refId":"image_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-2.828,-4.009,0],"ix":2,"l":2},"a":{"a":0,"k":[114.595,86.176,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":3,"nm":"f_l_leg-Wrist","parent":6,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar userRot = 0;\nvar valueRot = userRot ? value : 0;\nvar startctrl = thisComp.layer('f_l_leg-Shoulder');\nvar endctrl = thisLayer;\nvar curLayer = thisLayer;\nvar curRot = 0;\nwhile (curLayer.hasParent) {\n    curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curLayer = curLayer.parent;\n}\nvar rotend = $bm_div(endctrl.effect('Limber')('Rotate End'), 100);\nif (rotend == 0) {\n    $bm_rt = $bm_sum($bm_neg(curRot), valueRot);\n} else {\n    var p1 = startctrl.toWorld([\n        0,\n        0,\n        0\n    ]);\n    var p3ik = endctrl.toWorld([\n        0,\n        0,\n        0\n    ]);\n    var p3r = $bm_sub(p3ik, p1);\n    var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n    var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n    var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n    var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n    var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n    var cw = endctrl.effect('Limber')('Clockwise');\n    var cwLin = Math.abs($bm_div(cw, 100));\n    var antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\n    var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n    var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n    var totLeng = $bm_sum(s3ik, s1ik);\n    var s2 = length(p1, p3ik);\n    var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n    var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, antipop), 1));\n    var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n    var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n    var s3blend = $bm_sum($bm_mul(s3ap, cwLin), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwLin)));\n    var s1blend = $bm_sum($bm_mul(s1ap, cwLin), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwLin)));\n    try {\n        var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(theta1, Math.PI);\n        var a2ik = $bm_sum($bm_sum(theta1, theta2), Math.PI);\n    } catch (err) {\n        value;\n    }\n    var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n    if (curveLin == 0) {\n        $bm_rt = $bm_sum($bm_sum($bm_mul(rotend, $bm_sub($bm_sub(radiansToDegrees(a2ik), 180), curRot)), $bm_mul($bm_sub(1, rotend), $bm_neg(curRot))), valueRot);\n    } else {\n        var p2ik = $bm_sum(p1, [\n            Math.sin(a1ik) * s3blend,\n            -Math.cos(a1ik) * s3blend\n        ]);\n        var p3ik = $bm_sum(p2ik, [\n            Math.sin(a2ik) * s1blend,\n            -Math.cos(a2ik) * s1blend\n        ]);\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var linkScale = endctrl.effect('Limber')('Link Length to Size Scale');\n        var tangLeng = $bm_mul($bm_div($bm_mul(curveLin, $bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length'))), 2), linkScale == true ? sizeScale : 1);\n        var avang = $bm_div($bm_sub($bm_sum(a1ik, a2ik), Math.PI), 2);\n        var tangPos = $bm_sum(p2ik, [\n            Math.cos(avang) * tangLeng,\n            Math.sin(avang) * tangLeng\n        ]);\n        var tangPosRel = $bm_sub(tangPos, p3ik);\n        var a1curve = $bm_sum(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n        $bm_rt = $bm_sum($bm_sum($bm_sub($bm_mul(rotend, a1curve), curRot), $bm_mul($bm_sub(1, rotend), $bm_neg(curRot))), valueRot);\n    }\n}"},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[-85,138,0],"to":[28.333,0.333,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[85,140,0],"to":[0,0,0],"ti":[48.444,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":90,"s":[-0.001,96,0],"to":[-40.414,0,0],"ti":[14.167,-7,0]},{"t":120,"s":[-85,138,0]}],"ix":2,"l":2,"x":"var $bm_rt;\n$bm_rt = loopOut('cycle');"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"Limber","np":36,"mn":"Pseudo/Limber_16","ix":1,"en":1,"ef":[{"ty":6,"nm":"Shape","mn":"Pseudo/Limber_16-0001","ix":1,"v":0},{"ty":0,"nm":"Upper Length","mn":"Pseudo/Limber_16-0002","ix":2,"v":{"a":0,"k":80,"ix":2}},{"ty":0,"nm":"Lower Length","mn":"Pseudo/Limber_16-0003","ix":3,"v":{"a":0,"k":80,"ix":3}},{"ty":0,"nm":"Start Size","mn":"Pseudo/Limber_16-0004","ix":4,"v":{"a":0,"k":80,"ix":4}},{"ty":0,"nm":"Middle Size","mn":"Pseudo/Limber_16-0005","ix":5,"v":{"a":0,"k":60,"ix":5}},{"ty":0,"nm":"End Size","mn":"Pseudo/Limber_16-0006","ix":6,"v":{"a":0,"k":40,"ix":6}},{"ty":0,"nm":"Bone Curvature","mn":"Pseudo/Limber_16-0007","ix":7,"v":{"a":0,"k":0,"ix":7}},{"ty":7,"nm":"Square End","mn":"Pseudo/Limber_16-0008","ix":8,"v":{"a":0,"k":0,"ix":8}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0009","ix":9,"v":0},{"ty":6,"nm":"Scale","mn":"Pseudo/Limber_16-0010","ix":10,"v":0},{"ty":0,"nm":"Size Scale","mn":"Pseudo/Limber_16-0011","ix":11,"v":{"a":0,"k":100,"ix":11}},{"ty":7,"nm":"Link Length to Size Scale","mn":"Pseudo/Limber_16-0012","ix":12,"v":{"a":0,"k":1,"ix":12}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0013","ix":13,"v":0},{"ty":6,"nm":"Colors","mn":"Pseudo/Limber_16-0014","ix":14,"v":0},{"ty":0,"nm":"Upper Split","mn":"Pseudo/Limber_16-0015","ix":15,"v":{"a":0,"k":100,"ix":15}},{"ty":0,"nm":"Upper Rounding","mn":"Pseudo/Limber_16-0016","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":0,"nm":"Lower Split","mn":"Pseudo/Limber_16-0017","ix":17,"v":{"a":0,"k":70,"ix":17}},{"ty":0,"nm":"Lower Rounding","mn":"Pseudo/Limber_16-0018","ix":18,"v":{"a":0,"k":0,"ix":18}},{"ty":2,"nm":"Upper Color","mn":"Pseudo/Limber_16-0019","ix":19,"v":{"a":0,"k":[1,0.843137323856,0.364705890417,1],"ix":19}},{"ty":2,"nm":"Middle Color","mn":"Pseudo/Limber_16-0020","ix":20,"v":{"a":0,"k":[1,0.843137323856,0.364705890417,1],"ix":20}},{"ty":2,"nm":"Lower Color","mn":"Pseudo/Limber_16-0021","ix":21,"v":{"a":0,"k":[1,0.843137323856,0.364705890417,1],"ix":21}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0022","ix":22,"v":0},{"ty":6,"nm":"Dynamics","mn":"Pseudo/Limber_16-0023","ix":23,"v":0},{"ty":0,"nm":"Clockwise","mn":"Pseudo/Limber_16-0024","ix":24,"v":{"a":0,"k":100,"ix":24}},{"ty":0,"nm":"Rotate Start","mn":"Pseudo/Limber_16-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":0,"nm":"Rotate End","mn":"Pseudo/Limber_16-0026","ix":26,"v":{"a":0,"k":0,"ix":26}},{"ty":7,"nm":"Stretch","mn":"Pseudo/Limber_16-0027","ix":27,"v":{"a":0,"k":1,"ix":27}},{"ty":0,"nm":"Anti-pop","mn":"Pseudo/Limber_16-0028","ix":28,"v":{"a":0,"k":0,"ix":28}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0029","ix":29,"v":0},{"ty":6,"nm":"Forward Kinematics","mn":"Pseudo/Limber_16-0030","ix":30,"v":0},{"ty":0,"nm":"FK","mn":"Pseudo/Limber_16-0031","ix":31,"v":{"a":0,"k":0,"ix":31}},{"ty":0,"nm":"Upper FK Rotation","mn":"Pseudo/Limber_16-0032","ix":32,"v":{"a":0,"k":180,"ix":32}},{"ty":0,"nm":"Lower FK Rotation","mn":"Pseudo/Limber_16-0033","ix":33,"v":{"a":0,"k":0,"ix":33}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0034","ix":34,"v":0}]}],"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":3,"nm":"f_l_leg-Shoulder","parent":19,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar userRot = 0;\nvar valueRot = userRot ? value : 0;\nvar endctrl = thisComp.layer('f_l_leg-Wrist');\nvar startctrl = thisComp.layer('f_l_leg-Shoulder');\nvar rotstart = $bm_div(endctrl.effect('Limber')('Rotate Start'), 100);\nvar curlayer = startctrl;\nvar curRot = 0;\nwhile (curlayer.hasParent) {\n    curRot = $bm_sum(curRot, curlayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curlayer = curlayer.parent;\n}\nif (rotstart == 0) {\n    $bm_rt = $bm_sum($bm_neg(curRot), valueRot);\n} else {\n    var fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\n    if (fk == 1) {\n        var startctrl = thisComp.layer('f_l_leg-Shoulder');\n        var p1 = startctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n        var a1fk = degreesToRadians(endctrl.effect('Limber')('Upper FK Rotation'));\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sum($bm_sub($bm_mul(rotstart, $bm_sub(radiansToDegrees(a1fk), 180)), curRot), $bm_mul($bm_neg(rotstart), $bm_neg(curRot))), valueRot);\n        } else {\n            var a2fk = degreesToRadians(endctrl.effect('Limber')('Lower FK Rotation'));\n            var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n            var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n            var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n            var s3fk = Math.max(endctrl.effect('Limber')('Upper Length'), Math.abs($bm_sub(c1, c2)));\n            var s1fk = Math.max(endctrl.effect('Limber')('Lower Length'), Math.abs($bm_sub(c2, c3)));\n            var p2fk = $bm_sum(p1, [\n                Math.sin(a1fk) * s3fk,\n                -Math.cos(a1fk) * s3fk\n            ]);\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1fk, a1fk), a2fk), Math.PI), 2);\n            var tangLeng = $bm_div($bm_mul(curveLin, $bm_sum(s3fk, s1fk)), 2);\n            var tangPos = $bm_sub(p2fk, [\n                Math.cos(avang) * tangLeng,\n                Math.sin(avang) * tangLeng\n            ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var a1fkcurve = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sum($bm_sub($bm_mul(rotstart, a1fkcurve), curRot), $bm_mul($bm_neg(rotstart), $bm_neg(curRot))), valueRot);\n        }\n    } else if (fk == 0) {\n        var p1 = startctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n        var p3ik = endctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n        var p3r = $bm_sub(p3ik, p1);\n        var s2 = length(p1, p3ik);\n        var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n        var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n        var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n        var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var cw = endctrl.effect('Limber')('Clockwise');\n        var cwLin = Math.abs($bm_div(cw, 100));\n        var antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\n        var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n        var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n        var totLeng = $bm_sum(s3ik, s1ik);\n        var s2 = length(p1, p3ik);\n        var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n        var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, antipop), 1));\n        var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n        var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n        var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n        var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        try {\n            var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n            var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n            var a1ik = $bm_sum(theta1, Math.PI);\n            var a2ik = theta2;\n        } catch (err) {\n            value;\n        }\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub($bm_sub(radiansToDegrees(a1ik), 180), curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        } else {\n            var p2ik = $bm_sum(p1, [\n                Math.sin(a1ik) * s3blend,\n                -Math.cos(a1ik) * s3blend\n            ]);\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1ik, a1ik), a2ik), Math.PI), 2);\n            var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n            var linkScale = endctrl.effect('Limber')('Link Length to Size Scale');\n            var tangLeng = $bm_mul($bm_div($bm_mul(curveLin, $bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length'))), 2), linkScale == true ? sizeScale : 1);\n            var tangPos = $bm_sub(p2ik, [\n                Math.cos(avang) * tangLeng,\n                Math.sin(avang) * tangLeng\n            ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var curveRotik = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub(curveRotik, curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        }\n    } else {\n        var p1 = startctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n        var p3ik = endctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n        var p3r = $bm_sub(p3ik, p1);\n        var s2 = length(p1, p3ik);\n        var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n        var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n        var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n        var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var cw = endctrl.effect('Limber')('Clockwise');\n        var cwLin = Math.abs($bm_div(cw, 100));\n        var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n        var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n        var totLeng = $bm_sum(s3ik, s1ik);\n        var s2 = length(p1, p3ik);\n        var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n        var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, $bm_div(endctrl.effect('Limber')('Anti-pop'), 100)), 1));\n        var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n        var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n        var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n        var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        try {\n            var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n            var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n            var a1ik = $bm_sum(theta1, Math.PI);\n            var a2ik = theta2;\n        } catch (err) {\n            value;\n        }\n        var a1fk = degreesToRadians($bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation')));\n        var a2fk = degreesToRadians(endctrl.effect('Limber')('Lower FK Rotation'));\n        var a1blend = $bm_sum($bm_mul(a1ik, $bm_sub(1, fk)), $bm_mul(a1fk, fk));\n        var a2blend = $bm_sum($bm_mul(a2ik, $bm_sub(1, fk)), $bm_mul(a2fk, fk));\n        var p2blend = $bm_sum(p1, [\n            Math.sin(a1blend) * s3blend,\n            -Math.cos(a1blend) * s3blend\n        ]);\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub($bm_sub(radiansToDegrees(a1blend), 180), curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        } else {\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1blend, a1blend), a2blend), Math.PI), 2);\n            var tangLeng = $bm_div($bm_mul(curveLin, totLeng), 2);\n            var tangPos = $bm_sub(p2blend, [\n                Math.cos(avang) * tangLeng,\n                Math.sin(avang) * tangLeng\n            ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var curveRotblend = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub(curveRotblend, curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        }\n    }\n}"},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[164.519,240,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[164.519,240,0],"to":[0,-1.267,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":90,"s":[164.519,232.4,0],"to":[0,0,0],"ti":[0,-1.267,0]},{"t":120,"s":[164.519,240,0]}],"ix":2,"l":2,"x":"var $bm_rt;\n$bm_rt = loopOut('cycle');"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"f_l_leg-Arm","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar curlayer = thisLayer;\nvar rot = 0;\nwhile (curlayer.hasParent) {\n    rot = $bm_sum(rot, curlayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curlayer = curlayer.parent;\n}\n$bm_rt = $bm_neg(rot);"},"p":{"a":0,"k":[0,0,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar val = [\n    0,\n    0\n];\nif (thisLayer.hasParent)\n    val = parent.fromWorld([\n        0,\n        0,\n        0\n    ]);\n$bm_rt = [\n    val[0],\n    val[1],\n    0\n];"},"a":{"a":0,"k":[0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.5522847498307933;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('f_l_leg-Wrist');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n    rad2 * Math.sin(A),\n    -(dist - rad2 * Math.cos(A))\n];\nvar r3b = [\n    rad1 * Math.sin(A),\n    rad1 * Math.cos(A)\n];\nvar semiVerts = [\n    [\n        rad1,\n        0\n    ],\n    [\n        0,\n        rad1\n    ],\n    [\n        -rad1,\n        0\n    ]\n];\nvar semiIns = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        0\n    ],\n    [\n        $bm_mul(rad1, semiFac),\n        0\n    ],\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ]\n]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ],\n    [\n        $bm_mul($bm_neg(rad1), semiFac),\n        0\n    ],\n    [\n        0,\n        0\n    ]\n]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n            [\n                rad2,\n                -dist\n            ],\n            [\n                0,\n                -(dist - rad2)\n            ],\n            [\n                -rad2,\n                -dist\n            ]\n        ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                0\n            ],\n            [\n                $bm_mul(rad2, semiFac),\n                0\n            ],\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ]\n        ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ],\n            [\n                $bm_mul($bm_neg(rad2), semiFac),\n                0\n            ],\n            [\n                0,\n                0\n            ]\n        ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('f_l_leg-Wrist').effect('Limber')('Middle Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Distal Upper","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.5522847498307933;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('f_l_leg-Wrist');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n    rad2 * Math.sin(A),\n    -(dist - rad2 * Math.cos(A))\n];\nvar r3b = [\n    rad1 * Math.sin(A),\n    rad1 * Math.cos(A)\n];\nvar semiVerts = [\n    [\n        rad1,\n        0\n    ],\n    [\n        0,\n        rad1\n    ],\n    [\n        -rad1,\n        0\n    ]\n];\nvar semiIns = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        0\n    ],\n    [\n        $bm_mul(rad1, semiFac),\n        0\n    ],\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ]\n]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ],\n    [\n        $bm_mul($bm_neg(rad1), semiFac),\n        0\n    ],\n    [\n        0,\n        0\n    ]\n]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n            [\n                rad2,\n                -dist\n            ],\n            [\n                0,\n                -(dist - rad2)\n            ],\n            [\n                -rad2,\n                -dist\n            ]\n        ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                0\n            ],\n            [\n                $bm_mul(rad2, semiFac),\n                0\n            ],\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ]\n        ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ],\n            [\n                $bm_mul($bm_neg(rad2), semiFac),\n                0\n            ],\n            [\n                0,\n                0\n            ]\n        ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('f_l_leg-Wrist').effect('Limber')('Upper Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Proximal Upper","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('f_l_leg-Wrist').content('Admin').content('p1').transform.position;"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('f_l_leg-Wrist').content('Admin').content('angles').transform.anchorPoint[0];"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Upper Group","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.5522847498307933;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('f_l_leg-Wrist');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n    rad2 * Math.sin(A),\n    -(dist - rad2 * Math.cos(A))\n];\nvar r3b = [\n    rad1 * Math.sin(A),\n    rad1 * Math.cos(A)\n];\nvar semiVerts = [\n    [\n        rad1,\n        0\n    ],\n    [\n        0,\n        rad1\n    ],\n    [\n        -rad1,\n        0\n    ]\n];\nvar semiIns = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        0\n    ],\n    [\n        $bm_mul(rad1, semiFac),\n        0\n    ],\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ]\n]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ],\n    [\n        $bm_mul($bm_neg(rad1), semiFac),\n        0\n    ],\n    [\n        0,\n        0\n    ]\n]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n            [\n                rad2,\n                -dist\n            ],\n            [\n                0,\n                -(dist - rad2)\n            ],\n            [\n                -rad2,\n                -dist\n            ]\n        ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                0\n            ],\n            [\n                $bm_mul(rad2, semiFac),\n                0\n            ],\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ]\n        ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ],\n            [\n                $bm_mul($bm_neg(rad2), semiFac),\n                0\n            ],\n            [\n                0,\n                0\n            ]\n        ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('f_l_leg-Wrist').effect('Limber')('Middle Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Proximal Lower","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.5522847498307933;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('f_l_leg-Wrist');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n    rad2 * Math.sin(A),\n    -(dist - rad2 * Math.cos(A))\n];\nvar r3b = [\n    rad1 * Math.sin(A),\n    rad1 * Math.cos(A)\n];\nvar semiVerts = [\n    [\n        rad1,\n        0\n    ],\n    [\n        0,\n        rad1\n    ],\n    [\n        -rad1,\n        0\n    ]\n];\nvar semiIns = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        0\n    ],\n    [\n        $bm_mul(rad1, semiFac),\n        0\n    ],\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ]\n]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ],\n    [\n        $bm_mul($bm_neg(rad1), semiFac),\n        0\n    ],\n    [\n        0,\n        0\n    ]\n]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n            [\n                rad2,\n                -dist\n            ],\n            [\n                0,\n                -(dist - rad2)\n            ],\n            [\n                -rad2,\n                -dist\n            ]\n        ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                0\n            ],\n            [\n                $bm_mul(rad2, semiFac),\n                0\n            ],\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ]\n        ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ],\n            [\n                $bm_mul($bm_neg(rad2), semiFac),\n                0\n            ],\n            [\n                0,\n                0\n            ]\n        ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('f_l_leg-Wrist').effect('Limber')('Lower Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Distal Lower","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('f_l_leg-Wrist').content('Admin').content('p2blend').transform.position;"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('f_l_leg-Wrist').content('Admin').content('angles').transform.anchorPoint[1];"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Lower Group","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Limb","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":8,"ty":2,"nm":"f_l_footfoot","parent":5,"refId":"image_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-7.484,-2.154,0],"ix":2,"l":2},"a":{"a":0,"k":[111.596,88.176,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":9,"ty":2,"nm":"l_ear","parent":15,"refId":"image_2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":6,"s":[-20]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":21,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":51,"s":[-40]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":81,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":111,"s":[-40]},{"t":126,"s":[-20]}],"ix":10,"x":"var $bm_rt;\n$bm_rt = loopOut('cycle');"},"p":{"a":0,"k":[297.573,96.182,0],"ix":2,"l":2},"a":{"a":0,"k":[80.305,112.882,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":10,"ty":2,"nm":"nose","parent":15,"refId":"image_3","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[66.897,188.937,0],"ix":2,"l":2},"a":{"a":0,"k":[22.824,22.823,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":12,"ty":2,"nm":"smile","parent":15,"refId":"image_4","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[173.358,247.083,0],"ix":2,"l":2},"a":{"a":0,"k":[72,58.673,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":13,"ty":4,"nm":"eye_white","parent":14,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[20.5,25.5,0],"ix":2,"l":2},"a":{"a":0,"k":[10.25,10.25,0],"ix":1,"l":2},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":26,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":30,"s":[100,0,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":34,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":133,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":137,"s":[100,0,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":141,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":205,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":209,"s":[100,0,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":213,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":325,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":329,"s":[100,0,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":333,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":360,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":364,"s":[100,0,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":368,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":432,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":436,"s":[100,0,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":440,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":504,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":508,"s":[100,0,100]},{"t":512,"s":[100,100,100]}],"ix":6,"l":2,"x":"var $bm_rt;\n$bm_rt = loopOut('cycle');"}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-5.523],[5.523,0],[0,5.523],[-5.523,0]],"o":[[0,5.523],[-5.523,0],[0,-5.523],[5.523,0]],"v":[[10,0],[0,10],[-10,0],[0,-10]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[10.25,10.25],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":14,"ty":4,"nm":"eye_black","parent":15,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[212.358,154.41,0],"ix":2,"l":2},"a":{"a":0,"k":[34.5,34.5,0],"ix":1,"l":2},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":26,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":30,"s":[100,20,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":34,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":133,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":137,"s":[100,20,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":141,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":205,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":209,"s":[100,20,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":213,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":325,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":329,"s":[100,20,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":333,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":360,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":364,"s":[100,20,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":368,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":432,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":436,"s":[100,20,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":440,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":504,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":508,"s":[100,20,100]},{"t":512,"s":[100,100,100]}],"ix":6,"l":2,"x":"var $bm_rt;\n$bm_rt = loopOut('cycle');"}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-17.673],[17.673,0],[0,17.673],[-17.673,0]],"o":[[0,17.673],[-17.673,0],[0,-17.673],[17.673,0]],"v":[[32,0],[0,32],[-32,0],[0,-32]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.258823529412,0.129411764706,0.043137254902,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":10,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[0.258823529412,0.129411764706,0.043137254902,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[34.5,34.5],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":15,"ty":2,"nm":"head","parent":19,"refId":"image_5","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":15,"s":[10]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":45,"s":[-10]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":75,"s":[10]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":105,"s":[-10]},{"t":120,"s":[0]}],"ix":10,"x":"var $bm_rt;\n$bm_rt = loopOut('cycle');"},"p":{"a":0,"k":[108.488,86.342,0],"ix":2,"l":2},"a":{"a":0,"k":[320.327,220.327,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":16,"ty":2,"nm":"r_ear","parent":15,"refId":"image_6","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":3,"s":[-20]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":18,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":48,"s":[-40]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":78,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":108,"s":[-40]},{"t":123,"s":[-20]}],"ix":10,"x":"var $bm_rt;\n$bm_rt = loopOut('cycle');"},"p":{"a":0,"k":[241.259,69.699,0],"ix":2,"l":2},"a":{"a":0,"k":[87.517,136.592,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":17,"ty":4,"nm":"tail","parent":19,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[15]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":15,"s":[30]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":45,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":75,"s":[30]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":105,"s":[0]},{"t":120,"s":[15]}],"ix":10,"x":"var $bm_rt;\n$bm_rt = loopOut('cycle');"},"p":{"a":0,"k":[474.662,76.103,0],"ix":2,"l":2},"a":{"a":0,"k":[103.144,205.678,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0.287,-30.621],[4.026,-4.577]],"o":[[3.672,3.728],[-0.252,26.946],[0,0]],"v":[[-11.143,-51.679],[10.857,2.321],[-8.147,51.679]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.968627510819,0.576470588235,0.117647066303,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":40,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[111.143,151.679],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":18,"ty":4,"nm":"neck_ring Outlines","parent":19,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[99.798,112.444,0],"ix":2,"l":2},"a":{"a":0,"k":[125.788,126.985,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[24.418,23.147],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"st","c":{"a":0,"k":[0.992156862745,0.941176470588,0.878431372549,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":10,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.940648995194,0.871208998736,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[82.94,185.878],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-18.683,18.861],[-13.733,-13.966],[17.351,-17.316],[14.392,12.005]],"o":[[17.172,-17.336],[14.067,14.307],[-15.676,15.644],[-15.509,-12.937]],"v":[[-26.279,-27.02],[36.721,-38.02],[23.721,25.98],[-35.279,39.98]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.247058838489,0.662745098039,0.960784373564,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":30,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[125.788,126.986],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":19,"ty":2,"nm":"body","refId":"image_7","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":15,"s":[-2]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":30,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":45,"s":[2]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":60,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":75,"s":[-2]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":90,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":105,"s":[2]},{"t":120,"s":[0]}],"ix":10,"x":"var $bm_rt;\n$bm_rt = loopOut('cycle');"},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":30,"s":[4300,1038.371,0],"to":[-14.167,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[4215,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":90,"s":[4130,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":120,"s":[4045,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":150,"s":[3960,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":180,"s":[3875,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":210,"s":[3790,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":240,"s":[3705,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":270,"s":[3620,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":300,"s":[3535,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":330,"s":[3450,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":360,"s":[3365,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":390,"s":[3280,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":420,"s":[3195,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":450,"s":[3110,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":480,"s":[3025,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":510,"s":[2940,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":540,"s":[2855,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":570,"s":[2770,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":600,"s":[2685,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":630,"s":[2600,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":660,"s":[2515,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":690,"s":[2430,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":720,"s":[2345,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":750,"s":[2260,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":780,"s":[2175,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":810,"s":[2090,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":840,"s":[2005,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":870,"s":[1920,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":900,"s":[1835,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":930,"s":[1750,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":960,"s":[1665,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":990,"s":[1580,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1020,"s":[1495,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1050,"s":[1410,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1080,"s":[1325,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1110,"s":[1240,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1140,"s":[1155,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1170,"s":[1070,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1200,"s":[985,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1230,"s":[900,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1260,"s":[815,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1290,"s":[730,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1320,"s":[645,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1350,"s":[560,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1380,"s":[475,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1410,"s":[390,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1440,"s":[305,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1470,"s":[220,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1500,"s":[135,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1530,"s":[50,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1560,"s":[-35,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1590,"s":[-120,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1620,"s":[-205,1038.371,0],"to":[-28.333,0,0],"ti":[28.333,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1650,"s":[-290,1038.371,0],"to":[-28.333,0,0],"ti":[14.167,0,0]},{"t":1680,"s":[-375,1038.371,0]}],"ix":2,"l":2},"a":{"a":0,"k":[296.561,200.796,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":20,"ty":3,"nm":"f_r_leg-Wrist","parent":21,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar userRot = 0;\nvar valueRot = userRot ? value : 0;\nvar startctrl = thisComp.layer('f_r_leg-Shoulder');\nvar endctrl = thisLayer;\nvar curLayer = thisLayer;\nvar curRot = 0;\nwhile (curLayer.hasParent) {\n    curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curLayer = curLayer.parent;\n}\nvar rotend = $bm_div(endctrl.effect('Limber')('Rotate End'), 100);\nif (rotend == 0) {\n    $bm_rt = $bm_sum($bm_neg(curRot), valueRot);\n} else {\n    var p1 = startctrl.toWorld([\n        0,\n        0,\n        0\n    ]);\n    var p3ik = endctrl.toWorld([\n        0,\n        0,\n        0\n    ]);\n    var p3r = $bm_sub(p3ik, p1);\n    var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n    var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n    var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n    var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n    var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n    var cw = endctrl.effect('Limber')('Clockwise');\n    var cwLin = Math.abs($bm_div(cw, 100));\n    var antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\n    var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n    var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n    var totLeng = $bm_sum(s3ik, s1ik);\n    var s2 = length(p1, p3ik);\n    var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n    var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, antipop), 1));\n    var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n    var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n    var s3blend = $bm_sum($bm_mul(s3ap, cwLin), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwLin)));\n    var s1blend = $bm_sum($bm_mul(s1ap, cwLin), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwLin)));\n    try {\n        var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(theta1, Math.PI);\n        var a2ik = $bm_sum($bm_sum(theta1, theta2), Math.PI);\n    } catch (err) {\n        value;\n    }\n    var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n    if (curveLin == 0) {\n        $bm_rt = $bm_sum($bm_sum($bm_mul(rotend, $bm_sub($bm_sub(radiansToDegrees(a2ik), 180), curRot)), $bm_mul($bm_sub(1, rotend), $bm_neg(curRot))), valueRot);\n    } else {\n        var p2ik = $bm_sum(p1, [\n            Math.sin(a1ik) * s3blend,\n            -Math.cos(a1ik) * s3blend\n        ]);\n        var p3ik = $bm_sum(p2ik, [\n            Math.sin(a2ik) * s1blend,\n            -Math.cos(a2ik) * s1blend\n        ]);\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var linkScale = endctrl.effect('Limber')('Link Length to Size Scale');\n        var tangLeng = $bm_mul($bm_div($bm_mul(curveLin, $bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length'))), 2), linkScale == true ? sizeScale : 1);\n        var avang = $bm_div($bm_sub($bm_sum(a1ik, a2ik), Math.PI), 2);\n        var tangPos = $bm_sum(p2ik, [\n            Math.cos(avang) * tangLeng,\n            Math.sin(avang) * tangLeng\n        ]);\n        var tangPosRel = $bm_sub(tangPos, p3ik);\n        var a1curve = $bm_sum(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n        $bm_rt = $bm_sum($bm_sum($bm_sub($bm_mul(rotend, a1curve), curRot), $bm_mul($bm_sub(1, rotend), $bm_neg(curRot))), valueRot);\n    }\n}"},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[85,133,0],"to":[-14.167,-7,0],"ti":[41.677,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":30,"s":[0.001,91,0],"to":[-49.958,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[-85,136,0],"to":[0,0,0],"ti":[-28.333,0.5,0]},{"t":120,"s":[85,133,0]}],"ix":2,"l":2,"x":"var $bm_rt;\n$bm_rt = loopOut('cycle');"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"Limber","np":36,"mn":"Pseudo/Limber_16","ix":1,"en":1,"ef":[{"ty":6,"nm":"Shape","mn":"Pseudo/Limber_16-0001","ix":1,"v":0},{"ty":0,"nm":"Upper Length","mn":"Pseudo/Limber_16-0002","ix":2,"v":{"a":0,"k":80,"ix":2}},{"ty":0,"nm":"Lower Length","mn":"Pseudo/Limber_16-0003","ix":3,"v":{"a":0,"k":80,"ix":3}},{"ty":0,"nm":"Start Size","mn":"Pseudo/Limber_16-0004","ix":4,"v":{"a":0,"k":80,"ix":4}},{"ty":0,"nm":"Middle Size","mn":"Pseudo/Limber_16-0005","ix":5,"v":{"a":0,"k":60,"ix":5}},{"ty":0,"nm":"End Size","mn":"Pseudo/Limber_16-0006","ix":6,"v":{"a":0,"k":40,"ix":6}},{"ty":0,"nm":"Bone Curvature","mn":"Pseudo/Limber_16-0007","ix":7,"v":{"a":0,"k":0,"ix":7}},{"ty":7,"nm":"Square End","mn":"Pseudo/Limber_16-0008","ix":8,"v":{"a":0,"k":0,"ix":8}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0009","ix":9,"v":0},{"ty":6,"nm":"Scale","mn":"Pseudo/Limber_16-0010","ix":10,"v":0},{"ty":0,"nm":"Size Scale","mn":"Pseudo/Limber_16-0011","ix":11,"v":{"a":0,"k":100,"ix":11}},{"ty":7,"nm":"Link Length to Size Scale","mn":"Pseudo/Limber_16-0012","ix":12,"v":{"a":0,"k":1,"ix":12}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0013","ix":13,"v":0},{"ty":6,"nm":"Colors","mn":"Pseudo/Limber_16-0014","ix":14,"v":0},{"ty":0,"nm":"Upper Split","mn":"Pseudo/Limber_16-0015","ix":15,"v":{"a":0,"k":100,"ix":15}},{"ty":0,"nm":"Upper Rounding","mn":"Pseudo/Limber_16-0016","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":0,"nm":"Lower Split","mn":"Pseudo/Limber_16-0017","ix":17,"v":{"a":0,"k":70,"ix":17}},{"ty":0,"nm":"Lower Rounding","mn":"Pseudo/Limber_16-0018","ix":18,"v":{"a":0,"k":0,"ix":18}},{"ty":2,"nm":"Upper Color","mn":"Pseudo/Limber_16-0019","ix":19,"v":{"a":0,"k":[0.968627512455,0.57647061348,0.117647066712,1],"ix":19}},{"ty":2,"nm":"Middle Color","mn":"Pseudo/Limber_16-0020","ix":20,"v":{"a":0,"k":[0.968627512455,0.57647061348,0.117647066712,1],"ix":20}},{"ty":2,"nm":"Lower Color","mn":"Pseudo/Limber_16-0021","ix":21,"v":{"a":0,"k":[0.968627512455,0.57647061348,0.117647066712,1],"ix":21}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0022","ix":22,"v":0},{"ty":6,"nm":"Dynamics","mn":"Pseudo/Limber_16-0023","ix":23,"v":0},{"ty":0,"nm":"Clockwise","mn":"Pseudo/Limber_16-0024","ix":24,"v":{"a":0,"k":100,"ix":24}},{"ty":0,"nm":"Rotate Start","mn":"Pseudo/Limber_16-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":0,"nm":"Rotate End","mn":"Pseudo/Limber_16-0026","ix":26,"v":{"a":0,"k":0,"ix":26}},{"ty":7,"nm":"Stretch","mn":"Pseudo/Limber_16-0027","ix":27,"v":{"a":0,"k":1,"ix":27}},{"ty":0,"nm":"Anti-pop","mn":"Pseudo/Limber_16-0028","ix":28,"v":{"a":0,"k":0,"ix":28}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0029","ix":29,"v":0},{"ty":6,"nm":"Forward Kinematics","mn":"Pseudo/Limber_16-0030","ix":30,"v":0},{"ty":0,"nm":"FK","mn":"Pseudo/Limber_16-0031","ix":31,"v":{"a":0,"k":0,"ix":31}},{"ty":0,"nm":"Upper FK Rotation","mn":"Pseudo/Limber_16-0032","ix":32,"v":{"a":0,"k":180,"ix":32}},{"ty":0,"nm":"Lower FK Rotation","mn":"Pseudo/Limber_16-0033","ix":33,"v":{"a":0,"k":0,"ix":33}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0034","ix":34,"v":0}]}],"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":21,"ty":3,"nm":"f_r_leg-Shoulder","parent":19,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar userRot = 0;\nvar valueRot = userRot ? value : 0;\nvar endctrl = thisComp.layer('f_r_leg-Wrist');\nvar startctrl = thisComp.layer('f_r_leg-Shoulder');\nvar rotstart = $bm_div(endctrl.effect('Limber')('Rotate Start'), 100);\nvar curlayer = startctrl;\nvar curRot = 0;\nwhile (curlayer.hasParent) {\n    curRot = $bm_sum(curRot, curlayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curlayer = curlayer.parent;\n}\nif (rotstart == 0) {\n    $bm_rt = $bm_sum($bm_neg(curRot), valueRot);\n} else {\n    var fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\n    if (fk == 1) {\n        var startctrl = thisComp.layer('f_r_leg-Shoulder');\n        var p1 = startctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n        var a1fk = degreesToRadians(endctrl.effect('Limber')('Upper FK Rotation'));\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sum($bm_sub($bm_mul(rotstart, $bm_sub(radiansToDegrees(a1fk), 180)), curRot), $bm_mul($bm_neg(rotstart), $bm_neg(curRot))), valueRot);\n        } else {\n            var a2fk = degreesToRadians(endctrl.effect('Limber')('Lower FK Rotation'));\n            var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n            var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n            var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n            var s3fk = Math.max(endctrl.effect('Limber')('Upper Length'), Math.abs($bm_sub(c1, c2)));\n            var s1fk = Math.max(endctrl.effect('Limber')('Lower Length'), Math.abs($bm_sub(c2, c3)));\n            var p2fk = $bm_sum(p1, [\n                Math.sin(a1fk) * s3fk,\n                -Math.cos(a1fk) * s3fk\n            ]);\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1fk, a1fk), a2fk), Math.PI), 2);\n            var tangLeng = $bm_div($bm_mul(curveLin, $bm_sum(s3fk, s1fk)), 2);\n            var tangPos = $bm_sub(p2fk, [\n                Math.cos(avang) * tangLeng,\n                Math.sin(avang) * tangLeng\n            ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var a1fkcurve = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sum($bm_sub($bm_mul(rotstart, a1fkcurve), curRot), $bm_mul($bm_neg(rotstart), $bm_neg(curRot))), valueRot);\n        }\n    } else if (fk == 0) {\n        var p1 = startctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n        var p3ik = endctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n        var p3r = $bm_sub(p3ik, p1);\n        var s2 = length(p1, p3ik);\n        var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n        var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n        var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n        var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var cw = endctrl.effect('Limber')('Clockwise');\n        var cwLin = Math.abs($bm_div(cw, 100));\n        var antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\n        var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n        var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n        var totLeng = $bm_sum(s3ik, s1ik);\n        var s2 = length(p1, p3ik);\n        var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n        var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, antipop), 1));\n        var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n        var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n        var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n        var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        try {\n            var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n            var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n            var a1ik = $bm_sum(theta1, Math.PI);\n            var a2ik = theta2;\n        } catch (err) {\n            value;\n        }\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub($bm_sub(radiansToDegrees(a1ik), 180), curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        } else {\n            var p2ik = $bm_sum(p1, [\n                Math.sin(a1ik) * s3blend,\n                -Math.cos(a1ik) * s3blend\n            ]);\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1ik, a1ik), a2ik), Math.PI), 2);\n            var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n            var linkScale = endctrl.effect('Limber')('Link Length to Size Scale');\n            var tangLeng = $bm_mul($bm_div($bm_mul(curveLin, $bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length'))), 2), linkScale == true ? sizeScale : 1);\n            var tangPos = $bm_sub(p2ik, [\n                Math.cos(avang) * tangLeng,\n                Math.sin(avang) * tangLeng\n            ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var curveRotik = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub(curveRotik, curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        }\n    } else {\n        var p1 = startctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n        var p3ik = endctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n        var p3r = $bm_sub(p3ik, p1);\n        var s2 = length(p1, p3ik);\n        var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n        var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n        var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n        var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var cw = endctrl.effect('Limber')('Clockwise');\n        var cwLin = Math.abs($bm_div(cw, 100));\n        var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n        var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n        var totLeng = $bm_sum(s3ik, s1ik);\n        var s2 = length(p1, p3ik);\n        var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n        var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, $bm_div(endctrl.effect('Limber')('Anti-pop'), 100)), 1));\n        var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n        var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n        var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n        var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        try {\n            var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n            var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n            var a1ik = $bm_sum(theta1, Math.PI);\n            var a2ik = theta2;\n        } catch (err) {\n            value;\n        }\n        var a1fk = degreesToRadians($bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation')));\n        var a2fk = degreesToRadians(endctrl.effect('Limber')('Lower FK Rotation'));\n        var a1blend = $bm_sum($bm_mul(a1ik, $bm_sub(1, fk)), $bm_mul(a1fk, fk));\n        var a2blend = $bm_sum($bm_mul(a2ik, $bm_sub(1, fk)), $bm_mul(a2fk, fk));\n        var p2blend = $bm_sum(p1, [\n            Math.sin(a1blend) * s3blend,\n            -Math.cos(a1blend) * s3blend\n        ]);\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub($bm_sub(radiansToDegrees(a1blend), 180), curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        } else {\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1blend, a1blend), a2blend), Math.PI), 2);\n            var tangLeng = $bm_div($bm_mul(curveLin, totLeng), 2);\n            var tangPos = $bm_sub(p2blend, [\n                Math.cos(avang) * tangLeng,\n                Math.sin(avang) * tangLeng\n            ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var curveRotblend = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub(curveRotblend, curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        }\n    }\n}"},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[164.519,220,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":30,"s":[164.519,211.4,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[164.519,220,0],"to":[0,0,0],"ti":[0,0,0]},{"t":120,"s":[164.519,220,0]}],"ix":2,"l":2,"x":"var $bm_rt;\n$bm_rt = loopOut('cycle');"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":22,"ty":4,"nm":"f_r_leg-Arm","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar curlayer = thisLayer;\nvar rot = 0;\nwhile (curlayer.hasParent) {\n    rot = $bm_sum(rot, curlayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curlayer = curlayer.parent;\n}\n$bm_rt = $bm_neg(rot);"},"p":{"a":0,"k":[0,0,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar val = [\n    0,\n    0\n];\nif (thisLayer.hasParent)\n    val = parent.fromWorld([\n        0,\n        0,\n        0\n    ]);\n$bm_rt = [\n    val[0],\n    val[1],\n    0\n];"},"a":{"a":0,"k":[0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.5522847498307933;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('f_r_leg-Wrist');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n    rad2 * Math.sin(A),\n    -(dist - rad2 * Math.cos(A))\n];\nvar r3b = [\n    rad1 * Math.sin(A),\n    rad1 * Math.cos(A)\n];\nvar semiVerts = [\n    [\n        rad1,\n        0\n    ],\n    [\n        0,\n        rad1\n    ],\n    [\n        -rad1,\n        0\n    ]\n];\nvar semiIns = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        0\n    ],\n    [\n        $bm_mul(rad1, semiFac),\n        0\n    ],\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ]\n]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ],\n    [\n        $bm_mul($bm_neg(rad1), semiFac),\n        0\n    ],\n    [\n        0,\n        0\n    ]\n]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n            [\n                rad2,\n                -dist\n            ],\n            [\n                0,\n                -(dist - rad2)\n            ],\n            [\n                -rad2,\n                -dist\n            ]\n        ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                0\n            ],\n            [\n                $bm_mul(rad2, semiFac),\n                0\n            ],\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ]\n        ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ],\n            [\n                $bm_mul($bm_neg(rad2), semiFac),\n                0\n            ],\n            [\n                0,\n                0\n            ]\n        ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('f_r_leg-Wrist').effect('Limber')('Middle Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Distal Upper","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.5522847498307933;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('f_r_leg-Wrist');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n    rad2 * Math.sin(A),\n    -(dist - rad2 * Math.cos(A))\n];\nvar r3b = [\n    rad1 * Math.sin(A),\n    rad1 * Math.cos(A)\n];\nvar semiVerts = [\n    [\n        rad1,\n        0\n    ],\n    [\n        0,\n        rad1\n    ],\n    [\n        -rad1,\n        0\n    ]\n];\nvar semiIns = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        0\n    ],\n    [\n        $bm_mul(rad1, semiFac),\n        0\n    ],\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ]\n]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ],\n    [\n        $bm_mul($bm_neg(rad1), semiFac),\n        0\n    ],\n    [\n        0,\n        0\n    ]\n]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n            [\n                rad2,\n                -dist\n            ],\n            [\n                0,\n                -(dist - rad2)\n            ],\n            [\n                -rad2,\n                -dist\n            ]\n        ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                0\n            ],\n            [\n                $bm_mul(rad2, semiFac),\n                0\n            ],\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ]\n        ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ],\n            [\n                $bm_mul($bm_neg(rad2), semiFac),\n                0\n            ],\n            [\n                0,\n                0\n            ]\n        ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('f_r_leg-Wrist').effect('Limber')('Upper Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Proximal Upper","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('f_r_leg-Wrist').content('Admin').content('p1').transform.position;"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('f_r_leg-Wrist').content('Admin').content('angles').transform.anchorPoint[0];"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Upper Group","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.5522847498307933;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('f_r_leg-Wrist');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n    rad2 * Math.sin(A),\n    -(dist - rad2 * Math.cos(A))\n];\nvar r3b = [\n    rad1 * Math.sin(A),\n    rad1 * Math.cos(A)\n];\nvar semiVerts = [\n    [\n        rad1,\n        0\n    ],\n    [\n        0,\n        rad1\n    ],\n    [\n        -rad1,\n        0\n    ]\n];\nvar semiIns = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        0\n    ],\n    [\n        $bm_mul(rad1, semiFac),\n        0\n    ],\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ]\n]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ],\n    [\n        $bm_mul($bm_neg(rad1), semiFac),\n        0\n    ],\n    [\n        0,\n        0\n    ]\n]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n            [\n                rad2,\n                -dist\n            ],\n            [\n                0,\n                -(dist - rad2)\n            ],\n            [\n                -rad2,\n                -dist\n            ]\n        ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                0\n            ],\n            [\n                $bm_mul(rad2, semiFac),\n                0\n            ],\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ]\n        ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ],\n            [\n                $bm_mul($bm_neg(rad2), semiFac),\n                0\n            ],\n            [\n                0,\n                0\n            ]\n        ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('f_r_leg-Wrist').effect('Limber')('Middle Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Proximal Lower","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.5522847498307933;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('f_r_leg-Wrist');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n    rad2 * Math.sin(A),\n    -(dist - rad2 * Math.cos(A))\n];\nvar r3b = [\n    rad1 * Math.sin(A),\n    rad1 * Math.cos(A)\n];\nvar semiVerts = [\n    [\n        rad1,\n        0\n    ],\n    [\n        0,\n        rad1\n    ],\n    [\n        -rad1,\n        0\n    ]\n];\nvar semiIns = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        0\n    ],\n    [\n        $bm_mul(rad1, semiFac),\n        0\n    ],\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ]\n]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ],\n    [\n        $bm_mul($bm_neg(rad1), semiFac),\n        0\n    ],\n    [\n        0,\n        0\n    ]\n]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n            [\n                rad2,\n                -dist\n            ],\n            [\n                0,\n                -(dist - rad2)\n            ],\n            [\n                -rad2,\n                -dist\n            ]\n        ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                0\n            ],\n            [\n                $bm_mul(rad2, semiFac),\n                0\n            ],\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ]\n        ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ],\n            [\n                $bm_mul($bm_neg(rad2), semiFac),\n                0\n            ],\n            [\n                0,\n                0\n            ]\n        ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('f_r_leg-Wrist').effect('Limber')('Lower Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Distal Lower","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('f_r_leg-Wrist').content('Admin').content('p2blend').transform.position;"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('f_r_leg-Wrist').content('Admin').content('angles').transform.anchorPoint[1];"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Lower Group","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Limb","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":23,"ty":2,"nm":"f_r_footfoot","parent":20,"refId":"image_8","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-9.596,-4.24,0],"ix":2,"l":2},"a":{"a":0,"k":[104.595,89.176,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":24,"ty":3,"nm":"b_r_leg-Wrist","parent":25,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar userRot = 0;\nvar valueRot = userRot ? value : 0;\nvar startctrl = thisComp.layer('b_r_leg-Shoulder');\nvar endctrl = thisLayer;\nvar curLayer = thisLayer;\nvar curRot = 0;\nwhile (curLayer.hasParent) {\n    curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curLayer = curLayer.parent;\n}\nvar rotend = $bm_div(endctrl.effect('Limber')('Rotate End'), 100);\nif (rotend == 0) {\n    $bm_rt = $bm_sum($bm_neg(curRot), valueRot);\n} else {\n    var p1 = startctrl.toWorld([\n        0,\n        0,\n        0\n    ]);\n    var p3ik = endctrl.toWorld([\n        0,\n        0,\n        0\n    ]);\n    var p3r = $bm_sub(p3ik, p1);\n    var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n    var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n    var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n    var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n    var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n    var cw = endctrl.effect('Limber')('Clockwise');\n    var cwLin = Math.abs($bm_div(cw, 100));\n    var antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\n    var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n    var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n    var totLeng = $bm_sum(s3ik, s1ik);\n    var s2 = length(p1, p3ik);\n    var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n    var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, antipop), 1));\n    var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n    var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n    var s3blend = $bm_sum($bm_mul(s3ap, cwLin), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwLin)));\n    var s1blend = $bm_sum($bm_mul(s1ap, cwLin), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwLin)));\n    try {\n        var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(theta1, Math.PI);\n        var a2ik = $bm_sum($bm_sum(theta1, theta2), Math.PI);\n    } catch (err) {\n        value;\n    }\n    var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n    if (curveLin == 0) {\n        $bm_rt = $bm_sum($bm_sum($bm_mul(rotend, $bm_sub($bm_sub(radiansToDegrees(a2ik), 180), curRot)), $bm_mul($bm_sub(1, rotend), $bm_neg(curRot))), valueRot);\n    } else {\n        var p2ik = $bm_sum(p1, [\n            Math.sin(a1ik) * s3blend,\n            -Math.cos(a1ik) * s3blend\n        ]);\n        var p3ik = $bm_sum(p2ik, [\n            Math.sin(a2ik) * s1blend,\n            -Math.cos(a2ik) * s1blend\n        ]);\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var linkScale = endctrl.effect('Limber')('Link Length to Size Scale');\n        var tangLeng = $bm_mul($bm_div($bm_mul(curveLin, $bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length'))), 2), linkScale == true ? sizeScale : 1);\n        var avang = $bm_div($bm_sub($bm_sum(a1ik, a2ik), Math.PI), 2);\n        var tangPos = $bm_sum(p2ik, [\n            Math.cos(avang) * tangLeng,\n            Math.sin(avang) * tangLeng\n        ]);\n        var tangPosRel = $bm_sub(tangPos, p3ik);\n        var a1curve = $bm_sum(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n        $bm_rt = $bm_sum($bm_sum($bm_sub($bm_mul(rotend, a1curve), curRot), $bm_mul($bm_sub(1, rotend), $bm_neg(curRot))), valueRot);\n    }\n}"},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":30,"s":[-85,134,0],"to":[28.333,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":90,"s":[85,134,0],"to":[0,0,0],"ti":[43.902,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":120,"s":[-0.001,100,0],"to":[-36.625,0,0],"ti":[13.19,0,0]},{"t":150,"s":[-87,134,0]}],"ix":2,"l":2,"x":"var $bm_rt;\n$bm_rt = loopOut('cycle');"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"Limber","np":36,"mn":"Pseudo/Limber_16","ix":1,"en":1,"ef":[{"ty":6,"nm":"Shape","mn":"Pseudo/Limber_16-0001","ix":1,"v":0},{"ty":0,"nm":"Upper Length","mn":"Pseudo/Limber_16-0002","ix":2,"v":{"a":0,"k":80,"ix":2}},{"ty":0,"nm":"Lower Length","mn":"Pseudo/Limber_16-0003","ix":3,"v":{"a":0,"k":80,"ix":3}},{"ty":0,"nm":"Start Size","mn":"Pseudo/Limber_16-0004","ix":4,"v":{"a":0,"k":80,"ix":4}},{"ty":0,"nm":"Middle Size","mn":"Pseudo/Limber_16-0005","ix":5,"v":{"a":0,"k":60,"ix":5}},{"ty":0,"nm":"End Size","mn":"Pseudo/Limber_16-0006","ix":6,"v":{"a":0,"k":40,"ix":6}},{"ty":0,"nm":"Bone Curvature","mn":"Pseudo/Limber_16-0007","ix":7,"v":{"a":0,"k":0,"ix":7}},{"ty":7,"nm":"Square End","mn":"Pseudo/Limber_16-0008","ix":8,"v":{"a":0,"k":0,"ix":8}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0009","ix":9,"v":0},{"ty":6,"nm":"Scale","mn":"Pseudo/Limber_16-0010","ix":10,"v":0},{"ty":0,"nm":"Size Scale","mn":"Pseudo/Limber_16-0011","ix":11,"v":{"a":0,"k":100,"ix":11}},{"ty":7,"nm":"Link Length to Size Scale","mn":"Pseudo/Limber_16-0012","ix":12,"v":{"a":0,"k":1,"ix":12}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0013","ix":13,"v":0},{"ty":6,"nm":"Colors","mn":"Pseudo/Limber_16-0014","ix":14,"v":0},{"ty":0,"nm":"Upper Split","mn":"Pseudo/Limber_16-0015","ix":15,"v":{"a":0,"k":100,"ix":15}},{"ty":0,"nm":"Upper Rounding","mn":"Pseudo/Limber_16-0016","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":0,"nm":"Lower Split","mn":"Pseudo/Limber_16-0017","ix":17,"v":{"a":0,"k":70,"ix":17}},{"ty":0,"nm":"Lower Rounding","mn":"Pseudo/Limber_16-0018","ix":18,"v":{"a":0,"k":0,"ix":18}},{"ty":2,"nm":"Upper Color","mn":"Pseudo/Limber_16-0019","ix":19,"v":{"a":0,"k":[0.968627512455,0.57647061348,0.117647066712,1],"ix":19}},{"ty":2,"nm":"Middle Color","mn":"Pseudo/Limber_16-0020","ix":20,"v":{"a":0,"k":[0.968627512455,0.57647061348,0.117647066712,1],"ix":20}},{"ty":2,"nm":"Lower Color","mn":"Pseudo/Limber_16-0021","ix":21,"v":{"a":0,"k":[0.968627512455,0.57647061348,0.117647066712,1],"ix":21}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0022","ix":22,"v":0},{"ty":6,"nm":"Dynamics","mn":"Pseudo/Limber_16-0023","ix":23,"v":0},{"ty":0,"nm":"Clockwise","mn":"Pseudo/Limber_16-0024","ix":24,"v":{"a":0,"k":100,"ix":24}},{"ty":0,"nm":"Rotate Start","mn":"Pseudo/Limber_16-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":0,"nm":"Rotate End","mn":"Pseudo/Limber_16-0026","ix":26,"v":{"a":0,"k":0,"ix":26}},{"ty":7,"nm":"Stretch","mn":"Pseudo/Limber_16-0027","ix":27,"v":{"a":0,"k":1,"ix":27}},{"ty":0,"nm":"Anti-pop","mn":"Pseudo/Limber_16-0028","ix":28,"v":{"a":0,"k":0,"ix":28}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0029","ix":29,"v":0},{"ty":6,"nm":"Forward Kinematics","mn":"Pseudo/Limber_16-0030","ix":30,"v":0},{"ty":0,"nm":"FK","mn":"Pseudo/Limber_16-0031","ix":31,"v":{"a":0,"k":0,"ix":31}},{"ty":0,"nm":"Upper FK Rotation","mn":"Pseudo/Limber_16-0032","ix":32,"v":{"a":0,"k":180,"ix":32}},{"ty":0,"nm":"Lower FK Rotation","mn":"Pseudo/Limber_16-0033","ix":33,"v":{"a":0,"k":0,"ix":33}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0034","ix":34,"v":0}]}],"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":25,"ty":3,"nm":"b_r_leg-Shoulder","parent":19,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar userRot = 0;\nvar valueRot = userRot ? value : 0;\nvar endctrl = thisComp.layer('b_r_leg-Wrist');\nvar startctrl = thisComp.layer('b_r_leg-Shoulder');\nvar rotstart = $bm_div(endctrl.effect('Limber')('Rotate Start'), 100);\nvar curlayer = startctrl;\nvar curRot = 0;\nwhile (curlayer.hasParent) {\n    curRot = $bm_sum(curRot, curlayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curlayer = curlayer.parent;\n}\nif (rotstart == 0) {\n    $bm_rt = $bm_sum($bm_neg(curRot), valueRot);\n} else {\n    var fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\n    if (fk == 1) {\n        var startctrl = thisComp.layer('b_r_leg-Shoulder');\n        var p1 = startctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n        var a1fk = degreesToRadians(endctrl.effect('Limber')('Upper FK Rotation'));\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sum($bm_sub($bm_mul(rotstart, $bm_sub(radiansToDegrees(a1fk), 180)), curRot), $bm_mul($bm_neg(rotstart), $bm_neg(curRot))), valueRot);\n        } else {\n            var a2fk = degreesToRadians(endctrl.effect('Limber')('Lower FK Rotation'));\n            var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n            var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n            var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n            var s3fk = Math.max(endctrl.effect('Limber')('Upper Length'), Math.abs($bm_sub(c1, c2)));\n            var s1fk = Math.max(endctrl.effect('Limber')('Lower Length'), Math.abs($bm_sub(c2, c3)));\n            var p2fk = $bm_sum(p1, [\n                Math.sin(a1fk) * s3fk,\n                -Math.cos(a1fk) * s3fk\n            ]);\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1fk, a1fk), a2fk), Math.PI), 2);\n            var tangLeng = $bm_div($bm_mul(curveLin, $bm_sum(s3fk, s1fk)), 2);\n            var tangPos = $bm_sub(p2fk, [\n                Math.cos(avang) * tangLeng,\n                Math.sin(avang) * tangLeng\n            ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var a1fkcurve = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sum($bm_sub($bm_mul(rotstart, a1fkcurve), curRot), $bm_mul($bm_neg(rotstart), $bm_neg(curRot))), valueRot);\n        }\n    } else if (fk == 0) {\n        var p1 = startctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n        var p3ik = endctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n        var p3r = $bm_sub(p3ik, p1);\n        var s2 = length(p1, p3ik);\n        var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n        var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n        var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n        var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var cw = endctrl.effect('Limber')('Clockwise');\n        var cwLin = Math.abs($bm_div(cw, 100));\n        var antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\n        var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n        var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n        var totLeng = $bm_sum(s3ik, s1ik);\n        var s2 = length(p1, p3ik);\n        var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n        var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, antipop), 1));\n        var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n        var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n        var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n        var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        try {\n            var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n            var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n            var a1ik = $bm_sum(theta1, Math.PI);\n            var a2ik = theta2;\n        } catch (err) {\n            value;\n        }\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub($bm_sub(radiansToDegrees(a1ik), 180), curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        } else {\n            var p2ik = $bm_sum(p1, [\n                Math.sin(a1ik) * s3blend,\n                -Math.cos(a1ik) * s3blend\n            ]);\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1ik, a1ik), a2ik), Math.PI), 2);\n            var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n            var linkScale = endctrl.effect('Limber')('Link Length to Size Scale');\n            var tangLeng = $bm_mul($bm_div($bm_mul(curveLin, $bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length'))), 2), linkScale == true ? sizeScale : 1);\n            var tangPos = $bm_sub(p2ik, [\n                Math.cos(avang) * tangLeng,\n                Math.sin(avang) * tangLeng\n            ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var curveRotik = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub(curveRotik, curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        }\n    } else {\n        var p1 = startctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n        var p3ik = endctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n        var p3r = $bm_sub(p3ik, p1);\n        var s2 = length(p1, p3ik);\n        var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n        var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n        var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n        var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var cw = endctrl.effect('Limber')('Clockwise');\n        var cwLin = Math.abs($bm_div(cw, 100));\n        var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n        var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n        var totLeng = $bm_sum(s3ik, s1ik);\n        var s2 = length(p1, p3ik);\n        var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n        var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, $bm_div(endctrl.effect('Limber')('Anti-pop'), 100)), 1));\n        var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n        var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n        var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n        var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        try {\n            var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n            var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n            var a1ik = $bm_sum(theta1, Math.PI);\n            var a2ik = theta2;\n        } catch (err) {\n            value;\n        }\n        var a1fk = degreesToRadians($bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation')));\n        var a2fk = degreesToRadians(endctrl.effect('Limber')('Lower FK Rotation'));\n        var a1blend = $bm_sum($bm_mul(a1ik, $bm_sub(1, fk)), $bm_mul(a1fk, fk));\n        var a2blend = $bm_sum($bm_mul(a2ik, $bm_sub(1, fk)), $bm_mul(a2fk, fk));\n        var p2blend = $bm_sum(p1, [\n            Math.sin(a1blend) * s3blend,\n            -Math.cos(a1blend) * s3blend\n        ]);\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub($bm_sub(radiansToDegrees(a1blend), 180), curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        } else {\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1blend, a1blend), a2blend), Math.PI), 2);\n            var tangLeng = $bm_div($bm_mul(curveLin, totLeng), 2);\n            var tangPos = $bm_sub(p2blend, [\n                Math.cos(avang) * tangLeng,\n                Math.sin(avang) * tangLeng\n            ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var curveRotblend = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub(curveRotblend, curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        }\n    }\n}"},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":30,"s":[469.519,230,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":90,"s":[469.519,230,0],"to":[0,-3.333,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":120,"s":[469.519,210,0],"to":[0,0,0],"ti":[0,-3.333,0]},{"t":150,"s":[469.519,230,0]}],"ix":2,"l":2,"x":"var $bm_rt;\n$bm_rt = loopOut('cycle');"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":26,"ty":4,"nm":"b_r_leg-Arm","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar curlayer = thisLayer;\nvar rot = 0;\nwhile (curlayer.hasParent) {\n    rot = $bm_sum(rot, curlayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curlayer = curlayer.parent;\n}\n$bm_rt = $bm_neg(rot);"},"p":{"a":0,"k":[0,0,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar val = [\n    0,\n    0\n];\nif (thisLayer.hasParent)\n    val = parent.fromWorld([\n        0,\n        0,\n        0\n    ]);\n$bm_rt = [\n    val[0],\n    val[1],\n    0\n];"},"a":{"a":0,"k":[0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.5522847498307933;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('b_r_leg-Wrist');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n    rad2 * Math.sin(A),\n    -(dist - rad2 * Math.cos(A))\n];\nvar r3b = [\n    rad1 * Math.sin(A),\n    rad1 * Math.cos(A)\n];\nvar semiVerts = [\n    [\n        rad1,\n        0\n    ],\n    [\n        0,\n        rad1\n    ],\n    [\n        -rad1,\n        0\n    ]\n];\nvar semiIns = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        0\n    ],\n    [\n        $bm_mul(rad1, semiFac),\n        0\n    ],\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ]\n]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ],\n    [\n        $bm_mul($bm_neg(rad1), semiFac),\n        0\n    ],\n    [\n        0,\n        0\n    ]\n]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n            [\n                rad2,\n                -dist\n            ],\n            [\n                0,\n                -(dist - rad2)\n            ],\n            [\n                -rad2,\n                -dist\n            ]\n        ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                0\n            ],\n            [\n                $bm_mul(rad2, semiFac),\n                0\n            ],\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ]\n        ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ],\n            [\n                $bm_mul($bm_neg(rad2), semiFac),\n                0\n            ],\n            [\n                0,\n                0\n            ]\n        ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('b_r_leg-Wrist').effect('Limber')('Middle Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Distal Upper","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.5522847498307933;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('b_r_leg-Wrist');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n    rad2 * Math.sin(A),\n    -(dist - rad2 * Math.cos(A))\n];\nvar r3b = [\n    rad1 * Math.sin(A),\n    rad1 * Math.cos(A)\n];\nvar semiVerts = [\n    [\n        rad1,\n        0\n    ],\n    [\n        0,\n        rad1\n    ],\n    [\n        -rad1,\n        0\n    ]\n];\nvar semiIns = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        0\n    ],\n    [\n        $bm_mul(rad1, semiFac),\n        0\n    ],\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ]\n]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ],\n    [\n        $bm_mul($bm_neg(rad1), semiFac),\n        0\n    ],\n    [\n        0,\n        0\n    ]\n]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n            [\n                rad2,\n                -dist\n            ],\n            [\n                0,\n                -(dist - rad2)\n            ],\n            [\n                -rad2,\n                -dist\n            ]\n        ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                0\n            ],\n            [\n                $bm_mul(rad2, semiFac),\n                0\n            ],\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ]\n        ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ],\n            [\n                $bm_mul($bm_neg(rad2), semiFac),\n                0\n            ],\n            [\n                0,\n                0\n            ]\n        ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('b_r_leg-Wrist').effect('Limber')('Upper Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Proximal Upper","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('b_r_leg-Wrist').content('Admin').content('p1').transform.position;"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('b_r_leg-Wrist').content('Admin').content('angles').transform.anchorPoint[0];"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Upper Group","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.5522847498307933;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('b_r_leg-Wrist');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n    rad2 * Math.sin(A),\n    -(dist - rad2 * Math.cos(A))\n];\nvar r3b = [\n    rad1 * Math.sin(A),\n    rad1 * Math.cos(A)\n];\nvar semiVerts = [\n    [\n        rad1,\n        0\n    ],\n    [\n        0,\n        rad1\n    ],\n    [\n        -rad1,\n        0\n    ]\n];\nvar semiIns = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        0\n    ],\n    [\n        $bm_mul(rad1, semiFac),\n        0\n    ],\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ]\n]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ],\n    [\n        $bm_mul($bm_neg(rad1), semiFac),\n        0\n    ],\n    [\n        0,\n        0\n    ]\n]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n            [\n                rad2,\n                -dist\n            ],\n            [\n                0,\n                -(dist - rad2)\n            ],\n            [\n                -rad2,\n                -dist\n            ]\n        ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                0\n            ],\n            [\n                $bm_mul(rad2, semiFac),\n                0\n            ],\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ]\n        ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ],\n            [\n                $bm_mul($bm_neg(rad2), semiFac),\n                0\n            ],\n            [\n                0,\n                0\n            ]\n        ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('b_r_leg-Wrist').effect('Limber')('Middle Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Proximal Lower","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.5522847498307933;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('b_r_leg-Wrist');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n    rad2 * Math.sin(A),\n    -(dist - rad2 * Math.cos(A))\n];\nvar r3b = [\n    rad1 * Math.sin(A),\n    rad1 * Math.cos(A)\n];\nvar semiVerts = [\n    [\n        rad1,\n        0\n    ],\n    [\n        0,\n        rad1\n    ],\n    [\n        -rad1,\n        0\n    ]\n];\nvar semiIns = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        0\n    ],\n    [\n        $bm_mul(rad1, semiFac),\n        0\n    ],\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ]\n]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n    [\n        0,\n        $bm_mul(rad1, semiFac)\n    ],\n    [\n        $bm_mul($bm_neg(rad1), semiFac),\n        0\n    ],\n    [\n        0,\n        0\n    ]\n]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n            [\n                rad2,\n                -dist\n            ],\n            [\n                0,\n                -(dist - rad2)\n            ],\n            [\n                -rad2,\n                -dist\n            ]\n        ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                0\n            ],\n            [\n                $bm_mul(rad2, semiFac),\n                0\n            ],\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ]\n        ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n            [\n                0,\n                $bm_mul(rad2, semiFac)\n            ],\n            [\n                $bm_mul($bm_neg(rad2), semiFac),\n                0\n            ],\n            [\n                0,\n                0\n            ]\n        ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n        0,\n        newVerts[pVert + 1][0] * semiFac * pers\n    ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('b_r_leg-Wrist').effect('Limber')('Lower Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Distal Lower","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('b_r_leg-Wrist').content('Admin').content('p2blend').transform.position;"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('b_r_leg-Wrist').content('Admin').content('angles').transform.anchorPoint[1];"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Lower Group","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Limb","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":1800,"st":0,"bm":0},{"ddd":0,"ind":27,"ty":2,"nm":"b_r_footfoot","parent":24,"refId":"image_9","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-10.091,-11.735,0],"ix":2,"l":2},"a":{"a":0,"k":[109.595,84.176,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":1800,"st":0,"bm":0}]}],"layers":[{"ddd":0,"ind":1,"ty":0,"nm":"Dog_Fast","refId":"comp_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[960,540,0],"ix":2,"l":2},"a":{"a":0,"k":[1920,1080,0],"ix":1,"l":2},"s":{"a":0,"k":[-100,100,100],"ix":6,"l":2}},"ao":0,"w":3840,"h":2160,"ip":900,"op":2700,"st":900,"bm":0},{"ddd":0,"ind":2,"ty":0,"nm":"Dog_Fast","refId":"comp_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[960,540,0],"ix":2,"l":2},"a":{"a":0,"k":[1920,1080,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"w":3840,"h":2160,"ip":0,"op":1800,"st":0,"bm":0}],"markers":[]}